AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  KeyName:
    Type: String

  NetworkStack:
    Type: String

  HostedZoneId:
    Type: String

  OpenviduDomainName:
    Type: String

Resources:
  OpenviduSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Openvidu security group
      VpcId:
        Fn::ImportValue:
          Fn::Join:
            - '-'
            - - !Ref NetworkStack
              - VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3478
          ToPort: 3478
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 40000
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 3478
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  OpenviduLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceType: t3.medium
        KeyName: !Ref KeyName
        ImageId: ami-0e6f2b2fa0ca704d0
        SecurityGroupIds:
          - !Ref OpenviduSecurityGroup
        UserData:
          Fn::Base64: |
            #!/bin/bash
            apt update -y
            apt-get install -y ca-certificates curl
            install -m 0755 -d /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            chmod a+r /etc/apt/keyrings/docker.asc
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt-get update -y
            apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            cd /opt
            curl https://s3-eu-west-1.amazonaws.com/aws.openvidu.io/install_openvidu_latest.sh -o install_openvidu_latest.sh
            bash install_openvidu_latest.sh &
            PID=$!
            sleep 200
            if ps -p $PID > /dev/null; then
            echo "OpenVidu installation script timed out."
            kill $PID
            exit 1
            fi
            cd /opt/openvidu
            sed -i 's/DOMAIN_OR_PUBLIC_IP=/DOMAIN_OR_PUBLIC_IP=openvidu.syeong.link/g' .env
            sed -i 's/OPENVIDU_SECRET=/OPENVIDU_SECRET=hongaldan/g' .env
            sed -i 's/CERTIFICATE=/CERTIFICATE=letsencrypt/g' .env
            sed -i 's/LETSENCRYPT_EMAIL=/LETSENCRYPT_EMAIL=visioner2168@gmial.com/g' .env
            ./openvidu start

  InitialOpenviduInstance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref OpenviduLaunchTemplate
        Version: 1
      Tags:
        - Key: Name
          Value: InitialOpenviduInstance
      SubnetId:
        Fn::ImportValue:
          Fn::Join:
            - '-'
            - - !Ref NetworkStack
              - PublicSubnet1

  OpenviduDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref OpenviduDomainName
      Type: A
      ResourceRecords:
        - !GetAtt InitialOpenviduInstance.PublicIp
      TTL: '60'

  OpenviduASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue:
            Fn::Join:
              - '-'
              - - !Ref NetworkStack
                - PrivateSubnet1
        - Fn::ImportValue:
            Fn::Join:
              - '-'
              - - !Ref NetworkStack
                - PrivateSubnet2
      LaunchTemplate:
        LaunchTemplateId: !Ref OpenviduLaunchTemplate
        Version: 1
      MinSize: '0'
      MaxSize: "10"
      DesiredCapacity: '0'
